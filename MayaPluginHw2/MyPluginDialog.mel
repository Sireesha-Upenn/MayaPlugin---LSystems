global string $textFile[];
global proc importLSystem(string $filename, string $fileType) 
{ 
	file -import $filename; 
}
 global proc func() 
{ 
	fileBrowserDialog -m 0 -fc "importLSystem" -tm "Select a text file " -ft "image" -an "filereader" -om "Import" -tipMessage "fileOpened" ; 
}
global proc func2() { string $filename[] = `fileDialog2 -fileMode 1 -caption "Select a text file"`; int $fileid; $fileid = fopen($filename[0], "r"); string $nextLine = `fgetline $fileid`; int $count = 0; while(size($nextLine) > 0){print($nextLine); $nextLine = `fgetline $fileid`; $textFile[$count] = $nextLine; $count++; } }

global proc createWindow() 
{
window -title "L-SYSTEMS" -widthHeight 500 300 -titleBar true -backgroundColor 0.6 0.6 0.6;
columnLayout -adjustableColumn true;

button -label "Browse" -width 25 -height 25 -align "right" -command "func2";

frameLayout -label "LSystem Parameters" -collapsable true -collapse false;

$iter = `floatSliderGrp -label "Iterations" -field true -minValue 0.0 -maxValue 10.0- fieldMinValue 0.0 - fieldMaxValue 100.0 -value 0` ;

$stepSize = `floatSliderGrp -label "Default Step Size" -field true -minValue 0.0 -maxValue 10.0- fieldMinValue 0.0 - fieldMaxValue 100.0 -value 0` ;

$angle = `floatSliderGrp -label "Default Angle" -field true -minValue 0.0 -maxValue 10.0- fieldMinValue 0.0 - fieldMaxValue 100.0 -value 0` ;

setParent ..; 

rowLayout -numberOfColumns 2 -columnWidth2 600 200;

setParent ..;

rowLayout -numberOfColumns 2 -columnWidth2 200 200;

button -label "Create" -width 60 -height 30 -align "right";

button -label "Cancel" -width 60 -height 30 -align "left";

setParent ..; 

showWindow;
};

global proc loadNode()
{
createNode transform -n LSystem1; 
createNode mesh -n LSystemShape1 -p LSystem1; 
sets -add initialShadingGroup LSystemShape1; createNode LSystemNode -n LSystemNode1; 
connectAttr time1.outTime LSystemNode1.time; 
connectAttr LSystemNode1.outputMesh LSystemShape1.inMesh;
}

global string $gMainWindow;
 setParent $gMainWindow;
menu -label "LSystemNode" -parent $gMainWindow -tearOff on; menuItem -label "LSystemCommand" -command ("createWindow");

menuItem -label "LSystemNode" -command ("loadNode");